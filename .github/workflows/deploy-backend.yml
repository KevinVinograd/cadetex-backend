name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build fat JAR
        run: ./gradlew clean shadowJar --no-daemon -x test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: build/libs/cadetex-backend-v2-all.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: .

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT || 22 }}
          source: "cadetex-backend-v2-all.jar"
          target: "${{ vars.REMOTE_DIR }}"
          overwrite: true

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT || 22 }}
          script: |
            # Configurar variables de entorno en el servicio systemd si es producción
            if [ -n "${{ vars.S3_BUCKET_NAME }}" ] && [ -n "${{ vars.AWS_REGION }}" ]; then
              echo "Configurando variables de entorno para producción..."
              # Agregar variables si no existen
              if ! grep -q "Environment=\"S3_BUCKET_NAME=" /etc/systemd/system/cadetex-backend.service; then
                sudo sed -i '/\[Service\]/a Environment="S3_BUCKET_NAME=${{ vars.S3_BUCKET_NAME }}"' /etc/systemd/system/cadetex-backend.service
              else
                sudo sed -i 's|Environment="S3_BUCKET_NAME=.*"|Environment="S3_BUCKET_NAME=${{ vars.S3_BUCKET_NAME }}"|' /etc/systemd/system/cadetex-backend.service
              fi
              if ! grep -q "Environment=\"AWS_REGION=" /etc/systemd/system/cadetex-backend.service; then
                sudo sed -i '/\[Service\]/a Environment="AWS_REGION=${{ vars.AWS_REGION }}"' /etc/systemd/system/cadetex-backend.service
              else
                sudo sed -i 's|Environment="AWS_REGION=.*"|Environment="AWS_REGION=${{ vars.AWS_REGION }}"|' /etc/systemd/system/cadetex-backend.service
              fi
            fi
            sudo systemctl daemon-reload || true
            sudo systemctl restart cadetex-backend
            sudo systemctl status cadetex-backend --no-pager || true


